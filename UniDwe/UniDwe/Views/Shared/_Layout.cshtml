@inject UniDwe.Services.ICurrentUserService CurrentUserService

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - UniDwe</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/UniDwe.styles.css" asp-append-version="true" />
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@500;700&display=swap" rel="stylesheet">

    <style>
        html {
            scroll-behavior: smooth;
        }

        .fade-wrapper {
            opacity: 0;
            transition: opacity 0.6s ease-in-out;
        }

            .fade-wrapper.fade-in {
                opacity: 1;
            }

        .custom-header {
            position: absolute;
            top: 0;
            width: 100%;
            z-index: 1000;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 2rem;
            color: white;
        }

            .custom-header .logo {
                font-family: 'Playfair Display', serif;
                font-size: 1.5rem;
                font-weight: 700;
            }

        .menu-button {
            background: transparent;
            border: 2px solid white;
            padding: 6px 16px;
            color: white;
            font-size: 1rem;
            cursor: pointer;
            font-weight: 500;
            transition: background 0.3s ease;
        }

            .menu-button:hover {
                background: rgba(255, 255, 255, 0.1);
            }

        .menu-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0, 0, 0, 0.96);
            color: white;
            z-index: 2000;
            display: flex;
            transform: translateY(-100%);
            transition: transform 0.5s ease-in-out;
        }

            .menu-overlay.show {
                transform: translateY(0);
            }

            .menu-overlay .menu-content {
                margin: auto 4rem;
                display: flex;
                flex-direction: column;
                justify-content: center;
                font-family: 'Playfair Display', serif;
                font-size: 2.5rem;
            }

                .menu-overlay .menu-content a {
                    color: white;
                    text-decoration: none;
                    margin: 0.8rem 0;
                    position: relative;
                    transition: all 0.3s ease;
                }

                    .menu-overlay .menu-content a::after {
                        content: "";
                        position: absolute;
                        left: 0;
                        bottom: -4px;
                        height: 2px;
                        width: 0;
                        background-color: white;
                        transition: width 0.3s ease;
                    }

                    .menu-overlay .menu-content a:hover::after {
                        width: 100%;
                    }

                    .menu-overlay .menu-content a:hover {
                        transform: translateX(10px);
                    }

        .menu-close {
            position: absolute;
            top: 1.5rem;
            right: 2rem;
            font-size: 2rem;
            cursor: pointer;
        }
    </style>

    @RenderSection("Styles", required: false)
</head>
<body>
    @{
        var isHomePage = Context.Request.Path.Value.Equals("/") || Context.Request.Path.Value.Equals("/Home/Index", StringComparison.OrdinalIgnoreCase);
        var isLoggedIn = await CurrentUserService.IsLoggedIn();
    }

    @if (!Context.Request.Path.Value.Contains("registration", StringComparison.OrdinalIgnoreCase)
    && !Context.Request.Path.Value.Contains("login", StringComparison.OrdinalIgnoreCase))
    {
        <header class="custom-header">
            <div class="logo">UniDwe</div>
            <button class="menu-button" onclick="toggleMenu()">Menu</button>
        </header>

        <div id="menuOverlay" class="menu-overlay">
            <div class="menu-close" onclick="toggleMenu()">&times;</div>
            <div class="menu-content">
                <a href="/">Home</a>
                <a href="#project-presentation">Project Presentation</a>
                <a href="#news-updates">News and Updates</a>
                <a href="/About">About the Project</a>
                <a href="/Team">Project Team</a>
                <a href="/Publications">Publications</a>

                @if (!isLoggedIn)
                {
                    <a href="/Login">Sign In</a>
                    <a href="/Registration">Registration</a>
                }
                else
                {
                    <a href="/Profile">Profile</a>
                }
            </div>
        </div>
    }

    @if (isHomePage)
    {
        <main role="main" class="pb-3">
            <div class="fade-wrapper" id="fade-content">
                @RenderBody()
            </div>
        </main>
    }
    else
    {
        <div class="container">
            <main role="main" class="pb-3">
                <div class="fade-wrapper" id="fade-content">
                    @RenderBody()
                </div>
            </main>
        </div>
    }

    @if (!Context.Request.Path.Value.Contains("registration", StringComparison.OrdinalIgnoreCase)
    && !Context.Request.Path.Value.Contains("login", StringComparison.OrdinalIgnoreCase))
    {
        <footer class="border-top footer text-muted">
            <div class="container">
                &copy; 2025 - UniDwe - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
            </div>
        </footer>
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        function toggleMenu() {
            const overlay = document.getElementById('menuOverlay');
            overlay.classList.toggle('show');
        }

        document.addEventListener('DOMContentLoaded', function () {
            const content = document.getElementById('fade-content');
            if (content) content.classList.add('fade-in');
        });

        document.querySelectorAll('a[href]').forEach(link => {
            if (link.getAttribute('target') === '_blank') return;

            link.addEventListener('click', function (e) {
                const href = link.getAttribute('href');
                if (!href || href.startsWith('#') || href.startsWith('javascript:') || link.hasAttribute('data-no-transition')) return;

                e.preventDefault();
                const content = document.getElementById('fade-content');
                if (content) {
                    content.classList.remove('fade-in');
                    content.style.opacity = '0';
                }

                setTimeout(() => {
                    window.location.href = href;
                }, 500);
            });
        });

        // NEW: Auto-close overlay on anchor click + smooth scroll
        document.addEventListener("DOMContentLoaded", function () {
            const menuOverlay = document.getElementById('menuOverlay');
            const anchorLinks = document.querySelectorAll('.menu-content a[href^="#"]');

            anchorLinks.forEach(link => {
                link.addEventListener('click', function (e) {
                    e.preventDefault();
                    const targetId = this.getAttribute('href').substring(1);
                    const targetElement = document.getElementById(targetId);

                    if (menuOverlay.classList.contains('show')) {
                        menuOverlay.classList.remove('show');
                    }

                    if (targetElement) {
                        setTimeout(() => {
                            targetElement.scrollIntoView({ behavior: 'smooth' });
                        }, 300);
                    }
                });
            });
        });
    </script>
</body>
</html>